version: '3'

networks:
    nginx-php74-mysql8-node:

services:
    # nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "8080:80"
        volumes:
            - .:/var/www/project:cached
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php74-service
            - mysql8-service
        networks:
            - nginx-php74-mysql8-node

    # php
    php74-service:
        build:
            context: ./docker/php/
            dockerfile: Dockerfile
        links:
            - redis-service
        container_name: php74-container
        ports:
            - "9000:9000"
        volumes:
            - .:/var/www/project:cached
        networks:
            - nginx-php74-mysql8-node

    # mysql
    mysql8-service:
        image: mysql:8
        container_name: mysql8-container
        hostname: mysql
        ports:
            - "3306:3306"
        volumes:
            - ~/docker/mysql-emf_api_example:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always # always restart unless stopped manually
        environment:
            MYSQL_ROOT_PASSWORD: 'Password123'
            MYSQL_USER: 'emf_user'
            MYSQL_PASSWORD: 'Password123'
            MYSQL_DATABASE: 'emf_api_example'
        networks:
            - nginx-php74-mysql8-node

    # node
    node-service:
        image: node:latest
        container_name: node-container
        volumes:
            - ./app:/var/www/project
        working_dir: /var/www/project
        networks:
            - nginx-php74-mysql8-node

    redis-service:
        image: redis:alpine
        container_name: redis-container
        networks:
            - nginx-php74-mysql8-node

    varnish-service:
        container_name: varnish-container
        depends_on:
            - nginx-service
        build:
            context: ./docker/varnish/
            dockerfile: Dockerfile
        links:
            - nginx-service
        ports:
            - "5002:6081"
        networks:
            - nginx-php74-mysql8-node

    adminer-service:
        container_name: adminer-container
        image: adminer
        hostname: adminer
        restart: always
        ports:
            - "8085:8080"
        depends_on:
            - mysql8-service
        networks:
            - nginx-php74-mysql8-node
